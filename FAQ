What do I do to update the production machine to the latest version?

  We do this by rebasing the production git branch. Below are the commands.

  //Move back to production branch and rebase
  - git checkout production
  - git rebase master
  //Usual stuff after an update
  - bundle install
  - bundle exec rake db:migrate RAILS_ENV=production
  - bundle exec rake assets:precompile
  - sudo service apache2 reload

  //Update master branch on local machine, do this after update production branch so that whatever code is there will be rolled in for next week after being tested in dev.
  - git checkout master 
  - git pull

How do I move data from the production version to the dev version?
  Take a data dump from production and run rake pg:dumppimport. This may not work if the databases are different.

  - sudo service apache2 stop //Need to stop apache
  - bundle exec rake db:drop RAILS_ENV=development
  - bundle exec rake db:create RAILS_ENV=development
  - bundle exec rake pg:dumpimport[filename_want_to_import] RAILS_ENV=development
  - sudo service apache2 start //Restart apache


How do I see what's in the database? In the backend?

  Run the command "rails console" which will take you to the rails console where
  you can interact with the database 2.

  You may need to specify RAILS_ENV if you are looking for a specific version of
  the database. The default environment is "development" and others options are
  "test" and "production". To findout when environment you are in while in the
  console, run "Rails.env"

  What's in the console you can query the database. Look in db/schema.rb to see
  how the database is structured. Tables are plural, but in the console it is
  singular, so to access all rows in the nodes table run "Node.all"

  For an overview on how to build a function to retrieve the information you
  want from the database go here:
  http://heurionconsulting.wordpress.com/2007/05/24/using-find-methods-in-railsactiverecord/


How do I write a cucumber test?

  Good tutorial: Railscasts.com cucumber tutorials
  Location of a good test example in our code: features/authentication.feature


How are things backed up?

  Location of code that backs up stuff: config/initializers/task_scheduler.rb
  Had to use the rufus/scheduler jem.


How do I restore from a database dump?

  rake db:drop
  rake db:create
  rake pg:dumpimport[filename_of_data_dump]